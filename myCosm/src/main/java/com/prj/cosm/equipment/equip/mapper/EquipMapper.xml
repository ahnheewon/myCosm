<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.prj.cosm.equipment.equip.mapper.EquipMapper">
<!-- ############################################################################################  -->																						 																						
 																					<!-- 설비 -->	
	
	<!-- 설비 전체 리스트 -->
	<select id="getEquipList" resultType="equipVO">
		SELECT *
		FROM equip
		ORDER BY EQUIP_NO
	</select>
	
	<!-- 설비 단건조회 -->
	<select id="getEquipInfo" parameterType="Integer" resultType="equipVO">
		SELECT e.equip_no, e.equip_name, e.equip_type, e.equip_std_vibe, e.equip_std_temp, e.equip_date,e.equip_purpose, t.time_start_date, t.time_end_date
		FROM equip e, equip_time t
		Where e.equip_no = t.time_equip_no
		and e.equip_no= #{value}
	</select>
	
	<!-- 설비 등록 -->
	<insert id="insertEquip" parameterType="equipVO">
		INSERT INTO EQUIP	( equip_no
						,equip_name
						,equip_type
						,equip_std_vibe
                        ,equip_std_temp
						,equip_process
						,equip_purpose
						,equip_date
						)
        values (#{equipNo},#{equipName},#{equipType},#{equipStdVibe},#{equipStdTemp},#{equipProcess},#{equipPurpose},SYSDATE)

	</insert>
	
	<!-- 설비 시간 등록 -->
	<insert id="insertEquipTime" parameterType="equipVO">
  
    <selectKey keyProperty="timeEquipNo" resultType="Integer" order="BEFORE">
      select MAX(equip_no) from equip
    </selectKey>
    INSERT INTO EQUIP_TIME ( 
						time_equip_no
                       <if test="timeStartDate != null and timeStartDate != ''">,time_start_date</if>
						<if test="timeEndDate != null and timeEndDate != ''">,time_end_date</if>
						)
		        values (#{timeEquipNo}
		        <if test="timeStartDate != null and timeStartDate != ''">,#{timeStartDate}</if>
		        <if test="timeEndDate != null and timeEndDate != ''">,#{timeEndDate}</if>
		        )
	</insert>
		
	<!-- 설비 수정 -->
	<update id="updateEquip" parameterType="equipVO">
	UPDATE equip
	<set>
		<if test="equipName !=null and !equipName.equals('')">
		equip_name = #{equipName},
		</if>
		<if test="equipType !=null and !equipType.equals('')">
		equip_type = #{equipType},
		</if>
		<if test="equipStdVibe !=null">
		equip_std_vibe = #{equipStdVibe},
		</if>
		<if test="equipStdTemp !=null">
		equip_std_temp = #{equipStdTemp},
		</if>
		<if test="equipPurpose !=null and !equipPurpose.equals('')">
		equip_purpose = #{equipPurpose}
		</if>									
	</set>
		WHERE equip_no = #{equipNo}
	
	</update>
	
	<!-- 설비 삭제 -->
	<delete id="deleteEquip" parameterType="Integer">
	DELETE EQUIP
	WHERE EQUIP_NO = #{equipNo}
	</delete>
	
	<!-- 설비 삭제 시 설비별 가동 시간 데이터 삭제 -->
	<delete id="deleteEquipTime" parameterType="Integer">
	DELETE EQUIP_TIME
	WHERE TIME_EQUIP_NO = #{equipNo}
	</delete>
	
	<!-- 설비 삭제 시 번호 정렬 update문 -->
	<update id="updateDeleteEquipNo" parameterType="Integer">
	UPDATE EQUIP
	SET EQUIP_NO = EQUIP_NO-1
	WHERE EQUIP_NO <![CDATA[>]]> #{equipNo}
	</update>
	
	<!-- 설비 삭제 시 번호 정렬 update문 -->
	<update id="updateDeleteTimeEquipNo" parameterType="Integer">
	UPDATE EQUIP_TIME
	SET TIME_EQUIP_NO = TIME_EQUIP_NO-1
	WHERE TIME_EQUIP_NO <![CDATA[>]]> #{equipNo}
	</update>
	
	<!-- 입력될 설비 번호 조회 -->
	<select id="getEquipNo" resultType="equipVO">
		SELECT NVL(MAX(equip_no),0) + 1 AS equip_no
		FROM EQUIP
	</select>
	
	<!-- 이용중인 공정 번호 조회 (다중행)-->
	<select id="getEquipProcess" resultType="equipVO">
	 SELECT DISTINCT(EQUIP_PROCESS)
	 FROM EQUIP
	</select>
	
	
<!-- ############################################################################################  -->
																					<!-- 공정  -->	
	
	<!-- 공정 전체 리스트 -->
	<select id="getProcessList" resultType="equipVO">
		SELECT *
		FROM PROCESS
		ORDER BY PROCESS_NO
	</select>
	
	<!-- 공정 단건 조회 -->
	<select id="getProcessInfo" parameterType="Integer" resultType="equipVO">
		SELECT process_no,process_name, process_content, process_seq
		FROM process
		Where process_no= #{value}
	</select>
	
	<!-- 공정 등록 -->
	<insert id="insertProcess" parameterType="equipVO">
		INSERT INTO PROCESS	   ( process_no
								,process_name
								,process_content
								,process_seq )
									
						VALUES( #{processNo}
								,#{processName}
								,#{processContent}
								,#{processSeq} )	
	</insert>
	
	<!-- 입력될 공정 번호 조회 -->
	<select id="getProcessNo" resultType="equipVO">
		SELECT NVL(MAX(process_no),0) + 1 AS process_no
		FROM process
	</select>
	
	<!-- 공정 수정 -->
	<update id="updateProcess" parameterType="equipVO">
	UPDATE process
		<set>
			<if test="processName !=null and !processName.equals('')">
			process_name = #{processName},
			</if>
			<if test="processContent !=null and !processContent.equals('')">
			process_content = #{processContent},
			</if>
			<if test="processSeq !=null and !processSeq.equals('')">
			process_seq = #{processSeq}</if>								
		</set>
	WHERE process_no = #{processNo}
	</update>
	
	<!-- 공정 삭제 -->
	<delete id="deleteProcess" parameterType="Integer">
	DELETE process
	WHERE process_no = #{processNo}
	</delete>
	
	<!-- 공정 삭제 시 번호 정렬 update문 -->
	<update id="updateDeleteProcessNo" parameterType="Integer">
	UPDATE PROCESS
	SET PROCESS_NO = PROCESS_NO-1
	WHERE PROCESS_NO <![CDATA[>]]> #{processNo}
	</update>
	
	<!-- 공정 삭제 시 적용공정 정렬 update문 -->
	<update id="updateDeleteEquipProcess" parameterType="Integer">
	update equip
    set equip_process = equip_process-1
    where equip_process <![CDATA[>]]> #{equipProcess}
    </update>
	
<!-- ############################################################################################  -->
																					<!-- 점검  -->

	<!-- 점검 전체 리스트 -->
	<select id="getTestList" resultType="equipVO">
	SELECT * 
	FROM TEST
	</select>
	
	<!-- 점검 단건 조회-->
	<select id="getTestInfo" parameterType="Integer" resultType="equipVO">
	
	</select>
	
	<!-- 점검일정 등록 -->
	<insert id="insertTest" parameterType="equipVO">
	</insert>
	
	<!-- 점검 수정 -->
	<update id="updateTest" parameterType="equipVO">
	</update>
	
	<!-- 점검 삭제 -->
	<delete id="deleteTest" parameterType="Integer">
	</delete>
	
	<!-- 점검 삭제 시 번호 정렬 update문-->
	<update id="updateDeleteTestNo" parameterType="Integer">
	</update>
	
	<!-- 입력될 점검 번호 조회 -->
	<select id="getTestNo" resultType="equipVO">
	</select>
	
<!-- ############################################################################################  -->
																					<!-- 고장  -->
	<!-- 고장 전체 리스트 -->
	<select id="getFailList" resultType="equipVO">
	SELECT *
	FROM FAIL
	</select>
	
	<!-- 고장 단건 조회-->
	<select id="getFailInfo" parameterType="Integer" resultType="equipVO">
	</select>
	
	<!-- 고장 등록 -->
	<insert id="insertFail" parameterType="equipVO">
	</insert>	   	
	
	<!-- 고장 수정 -->
	<update id="updateFail" parameterType="equipVO">
	</update>
	
	<!-- 고장 삭제 -->
	<delete id="deleteFail" parameterType="Integer">
	</delete>
	
	<!-- 고장 삭제 시 번호 정렬 update문-->
	<update id="updateDeleteFailNo" parameterType="Integer">
	</update>
	
	<!-- 입력될 고장 번호 조회 -->
	<select id="getFailNo" resultType="equipVO">
	</select>
	
	
	
</mapper>